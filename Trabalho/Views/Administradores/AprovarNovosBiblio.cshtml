@{
    ViewData["Title"] = "Aprovar Novos Bibliotecários";
}

@* cabeçalho personalizado *@
@section CustomHeader {
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Administradores" asp-action="Index">Home Page Administrador</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarLeitor" aria-controls="navbarLeitor"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarLeitor">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Administradores" asp-action="CreateAdmin">Registar Administradores</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" asp-controller="Administradores" asp-action="AprovarNovosBiblio">Aprovação de Bibliotecários</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Administradores" asp-action="GerirUtilizadores">Gerir Utilizadores</a>
                    </li>
                </ul>
                <partial name="_LoginPartial" />
            </div>
        </div>
    </nav>
}


<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aprovar Novos Bibliotecários</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <style>
        /* Configuração do fundo e fonte geral */
        body {
            background-color: #cdcfc0;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
        }

        /* Estilo do título */
        h1 {
            text-align: left;
            margin: 20px 60px;
            font-size: 40px;
            font-weight: bold;
            border: 1px solid #000;
            padding: 10px;
            display: inline-block;
        }

        /* Container principal */
        .main-container {
            display: flex;
            justify-content: space-between;
            padding: 20px;
            gap: 20px;
        }

        /* Lado esquerdo */
        .left-section {
            flex: 1;
            text-align: center;
        }

            .left-section img {
                width: 500px;
                height: auto;
                border-radius: 10px;
                margin-bottom: 20px;
            }

            .left-section button {
                background-color: #f1ebe5;
                border: 1px solid #000;
                padding: 15px 30px;
                border-radius: 10px;
                cursor: pointer;
                font-size: 15px;
                transition: background-color 0.3s ease;
            }

                .left-section button:hover {
                    background-color: #f5e9db;
                }

        /* Lado direito */
        .right-section {
            flex: 2;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

            .right-section .top-image {
                align-self: flex-end;
                width: 75px;
                height: auto;
                cursor: pointer;
            }

            .right-section .table-container {
                background-color: #fff;
                border-radius: 10px;
                padding: 20px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                overflow-x: auto;
            }

        table {
            width: 100%;
            border-collapse: collapse;
        }

            table th, table td {
                padding: 10px;
                text-align: left;
                border-bottom: 1px solid #ddd;
            }

            table th {
                background-color: #f1ebe5;
                font-weight: bold;
            }

            table input[type="checkbox"] {
                margin-right: 10px;
            }
    </style>
</head>
<body>
    <h1>Aprovar novos Bibliotecários</h1>

    <div class="main-container">
        <!-- Lado esquerdo -->
        <div class="left-section">
            <img src="/Images/Administrador.png" alt="Imagem Lateral">
            <button type="submit" onclick="Aprovar()">Aprovar</button>
        </div>

        <!-- Lado direito -->
        <div class="right-section">
            <a href="/Administradores/Index">
                <img src="/Images/Seta.png" alt="Imagem Superior" class="top-image">
            </a>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Selecionar</th>
                            <th>Nome</th>
                            <th>Username</th>
                            <th>Função</th>
                        </tr>
                    </thead>
                    <tbody id="bibliotecariosTableBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>

        // Função para carregar usuários na tabela
        function carregarBibliotecarios() {
            fetch("/api/Administradores/GetBibliotecariosParaAprovar") // Chama o endpoint
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Erro ao carregar bibliotecarios.");
                    }
                    return response.json();
                })
                .then(bibliotecarios => {
                    const tbody = document.getElementById("bibliotecariosTableBody"); // Seleciona o tbody
                    tbody.innerHTML = ""; // Limpa o conteúdo atual

                    // Verifica se não há bibliotecários para aprovar
                    if (bibliotecarios.length === 0) {
                        tbody.innerHTML = "<tr><td colspan='4'>Nenhum bibliotecário encontrado para aprovação.</td></tr>";
                        return;
                    }

                    // Adiciona uma linha para cada usuário
                    bibliotecarios.forEach(usuario => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                                    <td><input type="checkbox"></td>
                                    <td>${usuario.nome}</td>
                                    <td>${usuario.username}</td>
                                    <td>${usuario.role}</td>
                                `;
                        tbody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error("Erro:", error);
                    alert("Erro ao carregar bibliotecarios.");
                });
        }

        // Chama a função quando a página carregar
        document.addEventListener("DOMContentLoaded", carregarBibliotecarios);




        function Aprovar() {
            // Obter todas as linhas da tabela
            const rows = document.querySelectorAll("tbody tr");
            const selectedUsers = [];

            // Verificar quais Bibliotecarios foram selecionados
            rows.forEach(row => {
                const checkbox = row.querySelector("input[type='checkbox']");
                if (checkbox.checked) {
                    const username = row.cells[2].textContent; // Obter o username da terceira célula
                    selectedUsers.push(username);
                }
            });

            if (selectedUsers.length === 0) {
                alert("Por favor, selecione pelo menos um utilizador para aprovar.");
                return;
            }

            // Enviar Bibliotecarios selecionados para o servidor
            fetch("/api/Administradores/AprovarBibliotecarios", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(selectedUsers),
            })
                .then(response => {
                    if (response.ok) {
                        alert("Os bibliotecarios selecionados foram aprovados como Bibliotecários.");
                        location.reload(); // Recarregar a página para atualizar a tabela
                        window.location.href = '/Administradores/Index';
                    } else {
                        alert("Ocorreu um erro ao tentar aprovar os bibliotecarios. Por favor, tente novamente.");
                    }
                })
                .catch(error => {
                    console.error("Erro:", error);
                    alert("Ocorreu um erro ao tentar aprovar os bibliotecarios. Por favor, verifique sua conexão e tente novamente.");
                });
        }

    </script>


</body>
</html>
