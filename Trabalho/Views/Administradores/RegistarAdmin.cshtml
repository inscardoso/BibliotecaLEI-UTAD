@{
    ViewData["Title"] = "Registar Administrador";
}

<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registar Administradores</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <style>
        /* Configuração do fundo e fonte geral */
        body {
            background-color: #cdcfc0;
            font-family: 'Arial', sans-serif;
        }

        /* Estilo do título */
        h1 {
            text-align: left;
            margin: 20px 60px;
            font-size: 40px;
            font-weight: bold;
            border: 1px solid #000;
            padding: 10px;
            display: inline-block;
        }

        /* Configuração geral do formulário */
        form {
            width: 80%;
            margin: auto;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        /* Estilo geral das labels e inputs */
        .form-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

            .form-group input, .form-group select {
                border: none;
                background-color: #f2ebdc;
                padding: 10px;
                border-radius: 10px;
                font-size: 16px;
            }

        /* Labels em cima dos respetivos campos */
        label {
            font-weight: bold;
        }

        /* Configuração dos botões */
        .form-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        button {
            background-color: #ecdeab;
            border: 1px solid #000;
            padding: 15px 30px;
            border-radius: 10px;
            cursor: pointer;
            font-weight: bold;
            font-size: 18px;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: #c5b892;
            }

        #name {
            width: 450px; /* tamanho label de inserir nome */
        }

        #username {
            width: 300px; /*tamanho label de escrever username */
        }

        /* Estilo para o campo de e-mail com maior largura */
        #email {
            width: 300px; /* Aumentado */
        }

        .correct-msg {
            color: green;
            font-size: 14px;
            opacity: 0; /* Inicialmente invisível */
            margin-top: -20px; /* Ajuste para mover mais para cima, perto do campo de entrada */
            transition: opacity 0.3s ease; /* Transição suave para o efeito de aparecer/desaparecer */
        }

        .error-msg {
            color: red;
            font-size: 14px;
            opacity: 0; /* Inicialmente invisível */
            margin-top: -5px; /* Ajuste o mesmo valor para garantir alinhamento consistente */
            transition: opacity 0.3s ease; /* Transição suave para o efeito de aparecer/desaparecer */
        }

        /* Botão "mostrar/ocultar" para palavra-passe */
        .password-container {
            position: relative;
            width: 300px; /* Tamanho fixo do campo de palavra-passe */
        }

            .password-container input {
                width: 100%; /* Preenche toda a largura disponível */
            }

            .password-container button {
                position: absolute;
                right: 10px; /* Distância da borda direita */
                top: 50%;
                transform: translateY(-50%); /* Centraliza o botão verticalmente */
                background: transparent;
                border: none;
                font-size: 16px;
                cursor: pointer;
                padding: 0; /* Remove qualquer padding extra */
                width: 25px; /* Tamanho fixo para o botão (tamanho do ícone) */
                height: 25px; /* Tamanho fixo para o botão (tamanho do ícone) */
                display: flex;
                justify-content: center;
                align-items: center;
            }

                .password-container button i {
                    font-size: 20px; /* Tamanho do ícone */
                }
    </style>


</head>
<body>
    <h1>Registar Administrador</h1>
    <form id="registerForm" method="post">
        <!-- Campo Nome -->
        <div class="form-group mb-3">
            <label for="name">Nome</label>
            <input id="name" name="name" type="text" required />
        </div>

        <!-- Campo Username -->
        <div class="form-group mb-3">
            <label for="username">Username</label>
            <input id="username" name="username" type="text" required />
        </div>

        <!-- Campo E-mail -->
        <div id="emailGroup" class="form-group">
            <label for="email">E-mail</label>
            <input id="email" name="email" type="email" required />
            <span class="error-msg">E-mail inválido.</span>
            <span class="correct-msg">E-mail válido.</span>

            <!-- Campo Palavra-Passe -->
            <div class="form-group password-container">
                <label for="password">Palavra-Passe</label>
                <div style="display: flex; align-items: center; position: relative;">
                    <input id="password" name="password" type="password" required />
                    <button type="button" id="togglePassword" onclick="togglePasswordVisibility()">
                        <i class="fas fa-eye-slash"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Botões -->
        <div class="form-buttons">
            <button type="submit" onclick="confirmarRegisto(event)">Registar</button>
            <a href="/Administradores/Index" style="text-decoration: none;">
                <button type="button">Cancelar</button>
            </a>
        </div>
    </form>
</body>

</html>
<script>
    // Mostrar/ocultar a palavra-passe
    function togglePasswordVisibility() {
        const passwordInput = document.getElementById('password');
        const toggleButton = document.getElementById('togglePassword');
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleButton.innerHTML = '<i class="fas fa-eye"></i>';
        } else {
            passwordInput.type = 'password';
            toggleButton.innerHTML = '<i class="fas fa-eye-slash"></i>';
        }
    }

    // Função para capturar e exibir os dados
    function confirmarRegisto(event) {
        event.preventDefault();

        // Obter os valores dos campos
        // const nome = document.getElementById('name').value.trim();
        // const username = document.getElementById('username').value.trim();
        // const email = document.getElementById('email').value.trim();
        // const password = document.getElementById('password').value.trim();
        const nome = document.getElementById('name').value.trim();
        const username = document.getElementById('username').value.trim();
        const email = document.getElementById('email').value.trim();
        const password = document.getElementById('password').value.trim();
        // Validar campos básicos

        alert(username);
        alert(email);
        alert(password);

        if (!nome || !username || !email || !password) {
            alert('Por favor, preencha todos os campos.');
            return;
        }

        // Construir o objeto para o corpo do pedido
        const administrador = {
            Nome: nome,
            UserName: username, // Propriedade ajustada
            Email: email,
            Password: password
        };

        // Mostrar feedback de progresso
        document.querySelector('button[type="submit"]').disabled = true;
        alert(nome);
        // Fazer o pedido POST
        fetch("api/Administradores/Criar", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(administrador)

        })
            .then(response => {
                if (!response.ok) {
                    alert(username);
                    throw new Error("Ocorreu um erro ao criar o administrador.");
                }
                return response.json();
            })
            .then(data => {
                alert("Administrador criado com sucesso!");
                document.getElementById('registerForm').reset();
            })
            .catch(error => {
                console.error("Erro:", error);
                alert(email);
                alert("Não foi possível criar o administrador. Tente novamente.");
            })
            .finally(() => {
                document.querySelector('button[type="submit"]').disabled = false;
            });
    }
</script>